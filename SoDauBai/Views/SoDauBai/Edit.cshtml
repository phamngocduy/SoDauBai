@model SoGhiBai

@Html.HiddenFor(model => model.Email)
@Html.HiddenFor(model => model.idTKB)

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.NgayDay, "Ngày dạy", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker4" data-target-input="nearest">
                    @Html.TextBoxFor(model => model.NgayDay, Model.NgayDay.ToString("dd/MM/yyyy"), new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker4" })
                    <div class="input-group-append" data-target="#datetimepicker4" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.NgayDay, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.SoTietDay, "Số tiết", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoTietDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoTietDay, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.MaPhong, "Mã phòng", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaPhong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaPhong, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.ThoiGianBD, "Giờ bắt đầu", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker2" data-target-input="nearest">
                    @Html.EditorFor(model => model.ThoiGianBD, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker2" } })
                    <div class="input-group-append" data-toggle="dropdown">
                        <div class="input-group-text"><i class="fa fa-question"></i></div>
                    </div>
                    <div class="dropdown-menu dropdown-menu-right">
                        @for (int i = 1; i <= 15; i++)
                        {
                            var gioBD = CONST.TIET[i].ToString(@"hh\:mm");
                            <a class="dropdown-item" href="#" onclick="setTiet2Gio(this,'@gioBD')">Tiet @i<span style="float:right">@gioBD</span></a>
                        }
                    </div>
                    <div class="input-group-append" data-target="#datetimepicker2" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-clock"></i></div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ThoiGianBD, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.ThoiGianKT, "Giờ kết thúc", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker3" data-target-input="nearest">
                    @Html.EditorFor(model => model.ThoiGianKT, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker3" } })
                    <div class="input-group-append" data-toggle="dropdown">
                        <div class="input-group-text"><i class="fa fa-question"></i></div>
                    </div>
                    <div class="dropdown-menu dropdown-menu-right">
                        @for (int i = 1; i <= 15; i++)
                        {
                            var gioKT = CONST.TIET[i].Add(new TimeSpan(0, 45, 0)).ToString(@"hh\:mm");
                            <a class="dropdown-item" href="#" onclick="setTiet2Gio(this,'@gioKT')">Tiet @i<span style="float:right">@gioKT</span></a>
                        }
                    </div>
                    <div class="input-group-append" data-target="#datetimepicker3" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-clock"></i></div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ThoiGianKT, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            @Html.LabelFor(model => model.TongSoSV, "Số lượng SV", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TongSoSV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TongSoSV, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.NDGiangDay, "Nội dung giảng dạy", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-12">
                @Html.TextAreaFor(model => model.NDGiangDay, new { @class = "form-control", required = true })
                @Html.ValidationMessageFor(model => model.NDGiangDay, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.NhanXetSV, "Nhận xét sinh viên", htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-12">
                <div class="input-group">
                    @Html.EditorFor(model => model.NhanXetSV, new { htmlAttributes = new { @class = "form-control", required = true } })
                    <div class="dropdown input-group-append">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" onclick="$('#NhanXetSV').val('')" href="#">Khác...</a>
                            @foreach (var item in ViewBag.NhanXets as List<NhanXet>)
                            {
                                <a class="dropdown-item" onclick="$('#NhanXetSV').val($(this).text())" href="#">@item.NoiDung</a>
                            }
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.NhanXetSV, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DeXuat, "Đề xuất khác", htmlAttributes: new { @class = "control-label col-md-10" })
    <div class="col-md-12">
        @Html.EditorFor(model => model.DeXuat, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DeXuat, "", new { @class = "text-danger" })
    </div>
</div>

<script>
    function setTiet2Gio(tag, gio) {
        $(tag).parent().parent().find('input.datetimepicker-input').val(gio);
    }
</script>
