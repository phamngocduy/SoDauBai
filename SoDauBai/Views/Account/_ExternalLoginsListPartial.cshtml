@model ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() > 0)
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl })) {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        switch (p.AuthenticationType)
                        {
                            case "Google":
                            {
                                <button type="submit" class="btn btn-google btn-user btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                    <i class="fab fa-google fa-fw"></i> Đăng nhập bằng Gmail
                                </button>
                                break;
                            }
                            case "Microsoft":
                            {
                                <button type="submit" class="btn btn-primary btn-user btn-block" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                    Đăng nhập bằng mail Văn Lang
                                </button>
                                break;
                            }
                        }
                    }
                </p>
            </div>
        }
    }
}
