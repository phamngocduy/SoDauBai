@model IEnumerable<ThoiKhoaBieu>
@{
    var GiangViens = ViewBag.GiangViens as List<GiangVien>;
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary d-inline">Thống kê số lớp dạy trong HK</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Mã GV</th>
                        <th>Họ tên</th>
                        <th>Số lớp</th>
                        <th>Số giờ</th>
                        <th>Lớp học phần</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.GroupBy(tkb => tkb.MaGV))
                    {
                        var giangVien = GiangViens.FirstOrDefault(gv => gv.MaGV == group.Key);
                        if (giangVien != null) { GiangViens.Remove(giangVien); }
                        <tr>
                            <td>@(group.Key)</td>
                            <td>@(giangVien?.HoTen)</td>
                            <td>@group.Count()</td>
                            <td>
                                @group.Sum(tkb => (tkb.TuanKT - tkb.TuanBD + 1) * tkb.SoTiet)
                            </td>
                            <td>
                                @foreach (var item in group.GroupBy(tkb => tkb.MaMH))
                                {
                                    <a href="@Url.Action("Index", "SoDauBai", new { item.First().id })" target="_blank">@item.First().TenMH@(item.Count() > 1 ? String.Format("({0})", item.Count()) : null)</a>
                                }
                            </td>
                        </tr>
                    }
                    @foreach (var giangVien in GiangViens.Where(gv => gv.MaGV != ""))
                    {
                        <tr>
                            <td>@giangVien.MaGV</td>
                            <td>@giangVien.HoTen</td>
                            <td>0</td>
                            <td>0</td>
                            <td></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script>
    <script>
        // Call the dataTables jQuery plugin
        $(document).ready(function() {
            $('#dataTable').DataTable({
                stateSave: true,
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.10.19/i18n/Vietnamese.json'
                },
                dom: '<"row"<"col-sm-12 col-md-4"l><"col-sm-12 col-md-4"B><"col-sm-12 col-md-4"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
                buttons: [ 'copy', 'csv', 'excel', 'pdf', 'print' ]
            });
        });
    </script>
}